// Code generated by MockGen. DO NOT EDIT.
// Source: router.go

// Package mock_router is a generated GoMock package.
package mock_router

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockUserRouter is a mock of UserRouter interface.
type MockUserRouter struct {
	ctrl     *gomock.Controller
	recorder *MockUserRouterMockRecorder
}

// MockUserRouterMockRecorder is the mock recorder for MockUserRouter.
type MockUserRouterMockRecorder struct {
	mock *MockUserRouter
}

// NewMockUserRouter creates a new mock instance.
func NewMockUserRouter(ctrl *gomock.Controller) *MockUserRouter {
	mock := &MockUserRouter{ctrl: ctrl}
	mock.recorder = &MockUserRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRouter) EXPECT() *MockUserRouterMockRecorder {
	return m.recorder
}

// LockAccount mocks base method.
func (m *MockUserRouter) LockAccount(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LockAccount", c)
}

// LockAccount indicates an expected call of LockAccount.
func (mr *MockUserRouterMockRecorder) LockAccount(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LockAccount", reflect.TypeOf((*MockUserRouter)(nil).LockAccount), c)
}

// Login mocks base method.
func (m *MockUserRouter) Login(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Login", c)
}

// Login indicates an expected call of Login.
func (mr *MockUserRouterMockRecorder) Login(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockUserRouter)(nil).Login), c)
}

// SignUp mocks base method.
func (m *MockUserRouter) SignUp(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SignUp", c)
}

// SignUp indicates an expected call of SignUp.
func (mr *MockUserRouterMockRecorder) SignUp(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockUserRouter)(nil).SignUp), c)
}

// UpdateProfile mocks base method.
func (m *MockUserRouter) UpdateProfile(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateProfile", c)
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockUserRouterMockRecorder) UpdateProfile(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockUserRouter)(nil).UpdateProfile), c)
}
